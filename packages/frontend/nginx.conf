server {
    listen 80;
    listen [::]:80;
    server_name honeyflow.life www.honeyflow.life;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # 보안 헤더 설정
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";
    
    # gzip 설정
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    gzip_min_length 1000;
    
    # 헬스체크 엔드포인트 - 상세한 상태 확인
    location = /health {
        access_log off;
        default_type application/json;
        
        # Backend 헬스 체크
        proxy_pass http://backend:3000/health;
        proxy_intercept_errors on;
        
        # Backend가 응답하지 않을 경우 처리
        error_page 502 504 = @health_fallback;
    }
    
    # Backend 실패시 fallback 응답
    location @health_fallback {
        default_type application/json;
        return 503 '{"status":"unhealthy","nginx":"healthy","backend":"unhealthy"}';
    }
    
    # SPA 라우팅을 위한 설정
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
    }
    
    # Backend API 설정
    location /api/ {
        proxy_pass http://backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;  
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';  
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';  
    }
    
    # Backend Socket 설정
    location /note/ {
        proxy_pass http://backend:3001;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;  
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';  
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';  
    }
    
    location /space/ {
        proxy_pass http://backend:3001;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;  
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';  
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';  
    }
    
    # 정적 파일 캐싱 설정
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }
    
    # favicon.ico 처리
    location = /favicon.ico {
        access_log off;
        expires 1d;
    }
    
    # 404 에러 처리
    error_page 404 /index.html;
}